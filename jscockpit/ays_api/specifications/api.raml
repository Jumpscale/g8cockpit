#%RAML 1.0
title: Cockpit API
baseUri: http://js8:5000
version: v1
mediaType:  application/json
securitySchemes:
    JWT:
        type: Pass Through
        description:
            This API uses JWT to authenticate the requests.
            All members of an organization on itsyou.online have access to this API.
        describedBy:
          headers:
            Authorization:
              description: |
                Should contain the JWT token.
                Format of the value is : bearer $JWT_TOKEN
          responses:
            401:
              description: Unauthorized


types:
  Repository:
    properties:
      path:
          type: string
          required: false
      name:
          type: string
          required: true
    example:
        path: "/opt/code/github/jumscpale/cockpit"
        name: "cockpit"

  Blueprint:
    properties:
      name:
          type: string
          required: true
      content:
          type: string
          required: true
      archived:
        type: boolean
        required: false
      hash:
        type: string
        required: false
      path:
        type: string
        required: false
    example:
        name: "cockpit.yaml"
        content: |
            service__main:
                description: "a service"
        path: "/opt/code/cockpit/repo/blueprints/my_blueprints.ayml"
        hash: '45d4dbd44a0a3c3c8cf62acdab8e0850'
        archived: true

  Service:
    properties:
        key:
           type: string
           required: true
        name:
           type: string
           required: true
        name:
           type: string
           required: true
        role:
           type: string
           required: true
        actions_py:
           type: string
           required: false
        state:
           type: object
           required: true
        instance_hrd:
           type: object
           required: false
        parent:
           type: Service
           required: false
        producers:
           type: Service[]
           required: false

    example:
        key: "github_repo!main"
        name: "github_repo"
        name: "main"
        role: "github_repo"
        actions_py: |
                class Actions(ActionsBaseMgmt):
                    @action()
                    def foor(self):
                        print('do something')
        state:
            events: {}
            instanceHRDHash: "805bc5e03a12dd59b1d181b15a4490b2"
            parent: ""
            producers: {}
            recipe: "sshkey"
            recurring: {}
            state:
              init: "OK"
              install: "OK"
              start: "OK"

        instance_hrd:
            github.client: "main"
            github.url: "https://github.com/zaibon"

  Template:
    properties:
        name:
            type: string
            required: true
        actions_py:
            type: string
            required: false
        schema_hrd:
            type: string
            required: true
        service_hrd:
            type: object
            required: false
    example:
        name: "github_repo"
        actions_py: |
                class Actions(ActionsBaseMgmt):
                    @action()
                    def foor(self):
                        print('do something')
        schema_hrd: |
            repo.name = type:'str' descr:'name of repo' @ASK
            repo.url = type:'str' descr:'url of github repo' default:''
            repo.account = parent:'github_account' @ASK
            repo.type =  type:'str' descr:'proj,code,ays,doc,user' @ASK
            code.path = type:'str' default:""
            github.client = type:'str' consume:'github_client:1' auto
            github.config= type:'str' consume:'github_config:1' auto
            milestone.category = type:'str' list
            milestones = type:'str' list consume:'github_milestone'
        service_hrd:
            recurring.monitor: "1h"
  TemplateRepo:
      properties:
          url:
            type: string
            required: true
          branch:
             type: string
             required: true
             default: 'master'
  AYSStep:
     properties:
        number:
           type: integer
           required: true
        services_keys:
           type: string[]
           required: true
        action:
            type: string
            required: true
  AYSRun:
     properties:
        steps:
           type: AYSStep[]
           required: true
        repository:
           type: string
           required: true

  AYSFile:
     properties:
        content:
           type: string
           required: true

  Error:
    properties:
        code: integer
        error: string
    example:
        code: 404
        error: "repository not found"

/cockpit:
    securedBy: [ JWT ]
    /update:
        post:
            displayName: update
            description: update the cockpit to the last version
            responses:
                404:
                    description: "can't find cockpit repo or os.cockpit service"
                    body:
                        application/json:
                            type: Error
                204:
                    description: "update in progress"

/ays:
    securedBy: [ JWT ]
    /reload:
        get:
            displayName: reloadAll
            description: empty memory and reload all services
            responses:
                200:
    /template:
        post:
            displayName: addTemplateRepo
            description: add a new service template repository
            body:
              application/json:
                type: TemplateRepo
            responses:
                201:
                    description:
                        "Repository added"
                    body:
                      application/json:
                        type: TemplateRepo
    /repository:
        description: a repository
        get:
            displayName: listRepositories
            description: list all repositorys
            responses:
                200:
                    body:
                        application/json:
                          type: Repository[]
        post:
            displayName: createNewRepository
            description: create a new repository
            body:
                application/json:
                    type: Repository
            responses:
                201:
                    description:
                        repository created
                    body:
                        application/json:
                          type: Repository
                409:
                    description: Repository with this name already exists.
                    body:
                        application/json:
                          type: Error
        /{repository}:
            uriParameters:
                repository:
                  type: string
            get:
                displayName: getRepository
                description: Get information of a repository
                responses:
                    200:
                        description: Detail of  a repository
                        body:
                            application/json:
                              type: Repository
                    404:
                        description: Repository not found
                        body:
                            application/json:
                              type: Error
            delete:
                displayName: deleteRepository
                description: Delete a repository
                responses:
                    204:
                        description: Repository removed
                    404:
                        description: Repository not found
                        body:
                            application/json:
                              type: Error
            /init:
                  post:
                      displayName: initRepository
                      description: init repository
                      queryParameters:
                          role:
                              type: string
                              default: ''
                          name:
                              type: string
                              default: ''
                      responses:
                          200:
                              description: repository inited
                          404:
                              description: not action with this name found for this service
                              body:
                                  application/json:
                                    type: Error
            /simulate:
                post:
                    displayName: simulateAction
                    description: simulate the execution of an action
                    queryParameters:
                        action:
                            description: action name
                            type: string
                        role:
                            type: string
                            default: ''
                        name:
                            type: string
                            default: ''
                    responses:
                        200:
                            description: result of simulation
                            body:
                                application/json:
                                    type: AYSRun
                        404:
                            description: not action with this name found for this service
                            body:
                                application/json:
                                  type: Error
            /execute:
                post:
                    displayName: executeAction
                    description: Perform an action on the services matches by the query arguments
                    queryParameters:
                        action:
                            description: action name
                            type: string
                        role:
                            type: string
                            default: ''
                        name:
                            type: string
                            default: ''
                        force:
                            type: boolean
                            default: false
                        producer_roles:
                            type: string
                            default: '*'
                        async:
                            type: boolean
                            default: false
                    responses:
                        200:
                            description: action started
                        404:
                            description: not action with this name found for this service
                            body:
                                application/json:
                                  type: Error
            /blueprint:
                description: A blueprint inside a repository
                get:
                    displayName: listBlueprints
                    description: List all blueprint
                    queryParameters:
                        archived:
                            type: boolean
                            default: true
                            description: include archive blueprint or not
                    responses:
                        200:
                            body:
                                application/json:
                                  type: Blueprint
                        404:
                            description: Blueprint not found
                            body:
                                application/json:
                                    type: Error

                post:
                    displayName: createNewBlueprint
                    description: Create a new blueprint
                    body:
                        application/json:
                            properties:
                                type: Blueprint
                    responses:
                        201:
                            body:
                                application/json:
                                  type: Blueprint
                        409:
                            description: Blueprint with this name already exists
                            body:
                                application/json:
                                  type: Error
                /{blueprint}:
                    uriParameters:
                        blueprint:
                          type: string
                    get:
                        displayName: getBlueprint
                        description: Get a blueprint
                        responses:
                            200:
                                body:
                                    application/json:
                                      type: Blueprint
                            404:
                                description: Blueprint not found
                                body:
                                    application/json:
                                      type: Error
                    post:
                        displayName: executeBlueprint
                        description: Execute the blueprint
                        queryParameters:
                            role:
                                type: string
                                default: ''
                            name:
                                type: string
                                default: ''
                        responses:
                            200:
                                description: blueprint executed
                            404:
                                description: blueprint not found
                                body:
                                    application/json:
                                      type: Error
                    put:
                        displayName: updateBlueprint
                        description: Update existing blueprint
                        body:
                            application/json:
                                properties:
                                    type: Blueprint
                        responses:
                            200:
                                description: blueprint updated
                            404:
                                description: blueprint not found
                                body:
                                    application/json:
                                      type: Error

                    delete:
                        displayName: deleteBlueprint
                        description: delete blueprint
                        responses:
                            204:
                                description: blueprint removed
                            404:
                                description: blueprint not found
                                body:
                                    application/json:
                                      type: Error
                    /archive:
                        put:
                            displayName: archiveBlueprint
                            description: archive the blueprint
                            responses:
                                200:
                                    description: blueprint archived
                                404:
                                    description: blueprint not found
                                    body:
                                        application/json:
                                          type: Error
                    /restore:
                        put:
                            displayName: restoreBlueprint
                            description: restore the blueprint
                            responses:
                                200:
                                    description: blueprint restored
                                404:
                                    description: blueprint not found
                                    body:
                                      application/json:
                                        type: Error
            /service:
                description: A service
                get:
                    displayName: listServices
                    description: List all services in the repository
                    responses:
                        200:
                            body:
                                application/json:
                                  type: Service[]
                /{role}:
                    uriParameters:
                        role:
                          type: string
                    get:
                        displayName: listServicesByRole
                        description: List all services of role 'role' in the repository
                        responses:
                            200:
                                body:
                                    application/json:
                                      type: Service[]
                    /{name}:
                        uriParameters:
                            name:
                              type: string
                        get:
                            displayName: getServiceByName
                            description: Get a service name
                            responses:
                                200:
                                    body:
                                        application/json:
                                          type: Service
                                404:
                                    description: Service name not found
                                    body:
                                        application/json:
                                          type: Error
                        delete:
                            displayName: deleteServiceByName
                            description: uninstall and delete a service
                            queryParameters:
                                scope:
                                    description: "List of roles on which we allow the execution of the action to propagate to"
                                    required: false
                                    type: string
                                    example: role
                            responses:
                                204:
                                    description: service deleted
                                404:
                                    description: Service name not found
                                    body:
                                        application/json:
                                          type: Error
                        /action:
                            get:
                                displayName: listServiceActions
                                description: Get list of action available on this service
                                responses:
                                    200:
                                        body:
                                            application/json:
                                              type: string[]
                                    404:
                                        description: Service name not found
                                        body:
                                            application/json:
                                              type: Error
            /template:
                description: A template of a service
                get:
                    displayName: listTemplates
                    description: list all templates
                    responses:
                        200:
                            body:
                                application/json:
                                  type: Template[]
                post:
                    displayName: createNewTemplate
                    description: Create new template
                    body:
                        application/json:
                            type: Template
                    responses:
                        201:
                            body:
                                application/json:
                                  type: Template
                /{template}:
                    uriParameters:
                        template:
                          type: string
                    get:
                        displayName: getTemplate
                        description: Get a template
                        responses:
                            200:
                                body:
                                    application/json:
                                      type: Template
                            404:
                                body:
                                    application/json:
                                      type: Error
            /aysrun:
                description: aysrun
                get:
                    displayName: listRuns
                    description: list all runs of the repository
                    responses:
                        200:
                            body:
                                application/json:
                                  type: AYSRun[]
                /{aysrun}:
                    uriParameters:
                        aysrun:
                          type: string
                    get:
                        displayName: getRun
                        description: Get an aysrun
                        responses:
                            200:
                                body:
                                    application/json:
                                      type: AYSRun
                            404:
                                body:
                                    application/json:
                                      type: Error

/webhooks:
    description:
    /github:
        post:
            description: Endpoint that receives the events from github
            responses:
                200:
                    description: event saved
                    body:
                        application/json:
/oauth:
    /callback:
        get:
            description: oauth endpoint where oauth provider need to send authorization code
            responses:
                200:
                    description: code received
